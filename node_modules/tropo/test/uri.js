var AmecheUri = require('../lib/uri');
var util = require('util');
var log = require('winston');

module.exports = {
	
    'Parse Sip Uri 1' : function(test) {
        
    	test.expect(4);
        
    	var uri = new AmecheUri("sip:mperez@tropo.com");
        test.equals(uri.type,'sip');
        test.equals(uri.value,'mperez@tropo.com');
        test.equals(uri.toURI(),'sip:mperez@tropo.com');
    	test.ok(uri);
                
        test.done();
    },

	'Parse Sip Uri 2' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("sip:mperez@tropo.com:5060");
        test.equals(uri.type,'sip');
        test.equals(uri.value,'mperez@tropo.com');
        test.equals(uri.toURI(),'sip:mperez@tropo.com:5060');
    	test.ok(uri);
	            
	    test.done();
	},

	'Parse Sip Uri 3' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("sip:mperez@tropo.com;tag=123456");
        test.equals(uri.type,'sip');
        test.equals(uri.value,'mperez@tropo.com');
        test.equals(uri.toURI(),'sip:mperez@tropo.com;tag=123456');
    	test.ok(uri);

	    test.done();
	},

	'Parse Sip Uri 4' : function(test) {
	    
		test.expect(4);
	    
		var uri = new AmecheUri("sip:121;phone-context=+44@tropo.com;user=phone");
	    test.equals(uri.type,'number');
	    test.equals(uri.value,'121;phone-context=+44@tropo.com');
        test.equals(uri.toURI(),"sip:121;phone-context=+44@tropo.com;user=phone");
		test.ok(uri);
	            
	    test.done();
	},
	
    'Parse Sip Uri without protocol' : function(test) {
        
    	test.expect(4);
        
    	var uri = new AmecheUri("mperez@tropo.com");
        test.equals(uri.type,'sip');
        test.equals(uri.value,'mperez@tropo.com');
        test.equals(uri.toURI(),'sip:mperez@tropo.com');
    	test.ok(uri);
                
        test.done();
    },
	
    'Parse Sips Uri 1' : function(test) {
        
    	test.expect(4);
        
    	var uri = new AmecheUri("sips:mperez@tropo.com");
        test.equals(uri.type,'sip');
        test.equals(uri.value,'mperez@tropo.com');
        test.equals(uri.toURI(),'sips:mperez@tropo.com');
    	test.ok(uri);
                
        test.done();
    },

	'Parse Sips Uri 2' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("sips:mperez@tropo.com:5060");
        test.equals(uri.type,'sip');
        test.equals(uri.value,'mperez@tropo.com');
        test.equals(uri.toURI(),'sips:mperez@tropo.com:5060');
    	test.ok(uri);
	            
	    test.done();
	},

	'Parse Sips Uri 3' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("sips:mperez@tropo.com;tag=123456");
        test.equals(uri.type,'sip');
        test.equals(uri.value,'mperez@tropo.com');
        test.equals(uri.toURI(),'sips:mperez@tropo.com;tag=123456');
    	test.ok(uri);

	    test.done();
	},

	'Parse Sips Uri 4' : function(test) {
	    
		test.expect(4);
	    
		var uri = new AmecheUri("sips:121;phone-context=+44@tropo.com;user=phone");
	    test.equals(uri.type,'number');
	    test.equals(uri.value,'121;phone-context=+44@tropo.com');
        test.equals(uri.toURI(),"sips:121;phone-context=+44@tropo.com;user=phone");
		test.ok(uri);
	            
	    test.done();
	},	

	'Parse Tel Uri 1' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("tel:34637710708");
        test.equals(uri.type,'number');
        test.equals(uri.value,'34637710708');
        test.equals(uri.toURI(),'tel:34637710708');
    	test.ok(uri);
	            
	    test.done();
	    
	},	

	'Parse Tel Uri 1' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("tel:34-637-710-708");
        test.equals(uri.type,'number');
        test.equals(uri.value,'34-637-710-708');
        test.equals(uri.toURI(),'tel:34-637-710-708');
    	test.ok(uri);
	            
	    test.done();	    
	},	

	'Parse Tel Uri 2' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("tel:+34637710708");
        test.equals(uri.type,'number');
        test.equals(uri.value,'+34637710708');
        test.equals(uri.toURI(),'tel:+34637710708');
    	test.ok(uri);
	            
	    test.done();	    
	},	

	'Parse Tel Uri 3' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("tel:34637710708;phone-context=tropo.com");
        test.equals(uri.type,'number');
        test.equals(uri.value,'34637710708');
        test.equals(uri.toURI(),'tel:34637710708;phone-context=tropo.com');
    	test.ok(uri);
	            
	    test.done();	    
	},	

	'Parse Tel Uri 4' : function(test) {
	    
		test.expect(4);
	    
    	var uri = new AmecheUri("tel:34637710708;phone-context=tropo.com");
        test.equals(uri.type,'number');
        test.equals(uri.value,'34637710708');
        test.equals(uri.toURI(),'tel:34637710708;phone-context=tropo.com');
    	test.ok(uri);
	            
	    test.done();	    
	},
	
	'Parse Tel Uri 5' : function(test) {
	    
		// Test in the context of this requirement: 
		// * To make development easier, call.connect() should accept either a tel, sip or sips URI but also accept a 
		// phone number without the tel: scheme. The SDK should convert this to a tel URI before sending down the wire.

		test.expect(4);
	    
    	var uri = new AmecheUri("34637710708");
        test.equals(uri.type,'number');
        test.equals(uri.value,'34637710708');
        test.equals(uri.toURI(),'tel:34637710708');
    	test.ok(uri);
	            
	    test.done();	    
	},	

	'Parse Tel Uri 5' : function(test) {
	    
		// Test in the context of this requirement: 
		// * To make development easier, call.connect() should accept either a tel, sip or sips URI but also accept a 
		// phone number without the tel: scheme. The SDK should convert this to a tel URI before sending down the wire.

		test.expect(4);
	    
    	var uri = new AmecheUri("+34637710708");
        test.equals(uri.type,'number');
        test.equals(uri.value,'+34637710708');
        test.equals(uri.toURI(),'tel:+34637710708');
    	test.ok(uri);
	            
	    test.done();	    
	},	
	
	'Parse Tel Uri 6' : function(test) {
	    
		// Test in the context of this requirement: 
		// * To make development easier, call.connect() should accept either a tel, sip or sips URI but also accept a 
		// phone number without the tel: scheme. The SDK should convert this to a tel URI before sending down the wire.

		test.expect(4);
	    
    	var uri = new AmecheUri("+34-637-710-708");
        test.equals(uri.type,'number');
        test.equals(uri.value,'+34-637-710-708');
        test.equals(uri.toURI(),'tel:+34-637-710-708');
    	test.ok(uri);
	            
	    test.done();	    
	},	

	'Parse Tel Uri 7' : function(test) {
	    
		// Test in the context of this requirement: 
		// * To make development easier, call.connect() should accept either a tel, sip or sips URI but also accept a 
		// phone number without the tel: scheme. The SDK should convert this to a tel URI before sending down the wire.

		test.expect(4);
	    
    	var uri = new AmecheUri("34-637-710-708");
        test.equals(uri.type,'number');
        test.equals(uri.value,'34-637-710-708');
        test.equals(uri.toURI(),'tel:34-637-710-708');
    	test.ok(uri);
	            
	    test.done();	    
	},	
	
	'Type is read only' : function(test) {
		
		test.expect(2);
    	var uri = new AmecheUri("sip:mperez@tropo.com");
    	uri['type'] = 'foo';
    	test.equals(uri.type, 'sip');
    	test.ok(uri);
    	test.done();
	},

	'Address is read only' : function(test) {
		
		test.expect(3);
    	var uri = new AmecheUri("sip:mperez@tropo.com");
    	uri['address'] = 'foo@bar';
    	test.equals(uri.value, 'mperez@tropo.com');
    	test.equals(uri.toURI(), 'sip:mperez@tropo.com');
    	test.ok(uri);
    	test.done();
	},
	
	
    'Parse Multiple Uris' : function(test) {
        
    	test.expect(8);
        
    	var uri1 = new AmecheUri("sip:mperez@tropo.com");
    	var uri2 = new AmecheUri("tel:34-637-710-708");
        
    	test.equals(uri1.type,'sip');
        test.equals(uri1.value,'mperez@tropo.com');
        test.equals(uri1.toURI(),'sip:mperez@tropo.com');
    	test.ok(uri1);

        test.equals(uri2.type,'number');
        test.equals(uri2.value,'34-637-710-708');
        test.equals(uri2.toURI(),'tel:34-637-710-708');
    	test.ok(uri2);

        test.done();
    },

	
    'Inspect returns URI' : function(test) {
        
    	test.expect(1);        
    	var uri1 = new AmecheUri("sip:mperez@tropo.com");
    	var got = util.inspect(uri1);
    	console.log('got: ' + got);
    	test.equals(-1,got.indexOf('toURI'));
        test.done();
    },
};

