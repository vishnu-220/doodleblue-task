var util = require('util');
var utils = require('../lib/utils');

module.exports = {
		'Parse XML properly handles child elements' : function(test) {
			test.expect(3);
			var xml = '<foo><bar baz="blah"/><bar baz="blah2"/></foo>';
			utils.parseXml(xml, function (err, result) {
				test.equals(2,result.children.length, 'Wrong children length');
				test.equals('blah',result.children[0].attrs['baz'], 'Wrong value for baz 1');
				test.equals('blah2',result.children[1].attrs['baz'], 'Wrong value for baz 2');
				test.done();
			});
		},
		'Parse XML properly handles empty elements' : function(test) {
			test.expect(2);
			var xml = '<end/>';
			utils.parseXml(xml, function (err, result) {
				test.equals(0,result.children.length, 'Wrong children length');
				test.equals('end',result.getName(), 'Wrong name');
				test.done();
			});
		},
		'Parse XML properly handles text elements' : function(test) {
			test.expect(2);
			var xml = '<foo>bar</foo>';
			utils.parseXml(xml, function (err, result) {
				test.equals(1,result.children.length, 'Wrong children length');
				test.equals('bar',result.getText(), 'Wrong text');
				test.done();
			});
		},
		'Parse XML properly handles grandchild text elements' : function(test) {
			test.expect(2);
			var xml = '<?xml version="1.0"?><input mode="dtmf" xmlns="urn:xmpp:rayo:input:1"><grammar content-type="application/grammar+voxeo">[3 DIGITS]</grammar></input>';
			utils.parseXml(xml, function (err, result) {
				test.equals(1,result.children.length, 'Wrong children length');
				test.equals('dtmf',result.attrs['mode'], 'Wrong mode');
				test.done();
			});
		}		
}