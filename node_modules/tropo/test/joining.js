var Rayo = require('../lib/rayo')
var util = require('util');
var events = require('events');
var Tropo = require('../lib/tropo-impl');
var MockTransport = require('../lib/rayo-mock');
var fs = require('fs');
var XmlElement = require('../lib/utils').XmlElement;

var tropo = null;
var transport = null;

var defaultCallId = 'foocall';
var defaultConnectionId = "fooconn";
var defaultTo = 'tel:+555';
var defaultFrom = 'tel:+666';

module.exports = {

    setUp : function(callback) {
        var transportConfig = {
            type : 'mock'
        };
        var rayoConfig = {
            callPingInterval : '5000'
        };

        tropo = new Tropo();
        tropo.debug = true;
        
        // Initialize Tropo
        tropo.init({
            rayoTransportConfig : transportConfig,
            rayoConfig: rayoConfig
        });
        transport = tropo.mockTransport;
        callback();
    },
    tearDown: function(callback) {
        process.nextTick(function() {
            console.log("Shutting down Tropo");
            tropo.shutdown();
            callback();
        });
    }, 
    
    
    'Joining to sip uri 1' : function(test) {
        // All sip URIs are the same

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('sip:martin@tropo.com');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'sip:martin@tropo.com');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'sip:martin@tropo.com'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    },    
    
    'Joining to sip uri 2' : function(test) {
        // SIP uris differ

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('martin@tropo.com');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'sip:martin@tropo.com');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'sip:martin@tropo.com'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    },    

    'Joining to sip uri 3' : function(test) {
        // SIP uris differ

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('sip:martin@tropo.com');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'martin@tropo.com');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'martin@tropo.com'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    },
    
    'Joining to sip uri 4' : function(test) {
        // sip uri with parameters

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('sip:martin@tropo.com;transport=tcp;user=phone');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'sip:martin@tropo.com');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'sip:martin@tropo.com'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    },    

    'Joining to sip uri 5' : function(test) {
        // sip uri with parameters

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('sip:martin@tropo.com;transport=tcp;user=phone');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'martin@tropo.com');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'martin@tropo.com'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    },     
    'Joining to tel uri 1' : function(test) {
        // Same tel uri

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('tel:34637710708');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'tel:34637710708');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'tel:34637710708'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    }, 
    
    'Joining to tel uri 2' : function(test) {
        // Same tel uri

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('tel:+34637710708');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'tel:+34637710708');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'tel:+34637710708'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    },
    
    'Joining to tel uri 3' : function(test) {
        // Different tel uris

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('tel:+34637710708');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'tel:34637710708');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'tel:34637710708'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    }, 

    'Joining to tel uri 4' : function(test) {
        // Different tel uris

        test.expect(1);
        tropo.on('call:incoming', function(event) {
            var subscriber = event.subscriber;
            var call = event.call;
            
            var conn = call.connect('tel:34637710708;phone-context=+34');
            conn.on('ringing', function(event) {
                // Found it on ringlist
                test.equals(event.address, 'tel:34637710708');
                test.done();
            });            
        });
        newCall({subscriber: defaultTo, permissions: ['CALL_RING_LIST'] });
        
        var blegId = 'o1';
        rayoEvent({
            body: new XmlElement('announce').c('joining', {'call-id':blegId, to:'tel:34637710708'}).up()
        });
        rayoEvent({
            connectionId : blegId,
            body: new XmlElement('ringing')
        });        
    },     
};

function rayoEvent(event) {
    var callId = defaultCallId;
    var connectionId = defaultConnectionId;
    var componentId = null;
    if (event.callId) {
        callId = event.callId;
    } 
    if (event.connectionId) {
        connectionId = event.connectionId;
    }
    if (event.componentId) {
        componentId = event.componentId;
    } 
    
    transport.emit('callEvent', {
        callId : callId,
        connectionId : connectionId,
        componentId : componentId,
        body : event.body
    });
};

function newCall(options) {
    var callId = defaultCallId;
    var connectionId = defaultConnectionId;
    var direction = 'in';
    var rayoUrl;
    var authToken;
    var from = defaultFrom;
    var to = defaultTo;
    var subscriber;
    var headers = {};
    
    if (options) {
        if (options.callId) {
            callId = options.callId;
        }
        if (options.connectionId) {
            connectionId = options.connectionId;
        }
        if (options.direction) {
            direction = options.direction;
        }
        if (options.rayoUrl) {
            rayoUrl = options.rayoUrl;
        }
        if (options.authToken) {
            authToken = options.authToken;
        }
        if (options.maskFrom) {
            from = null;
        }
        if (options.maskTo) {
            to = null;
        }
        if (options.headers) {
            headers = options.headers;
        }
        if (options.subscriber) {
            subscriber = options.subscriber;
        }
    }
    
    var body = new XmlElement('offer', {
        to : to,
        from : from,
        'direction' : direction,
    });
    for (var header in headers) {
        body.c('header', {
            name: header,
            value: options.headers[header]
        });
    }
    var subscription = body.c('subscription');
    subscription.c('address').t(subscriber);
    if (options.permissions) {
        for (var permission in options.permissions) {
            subscription.c('permission', {'name' : options.permissions[permission]});
        }
    }   
    transport.emit('callEvent', {
        callId : callId,
        connectionId: connectionId,
        body : body,
        rayoUrl: rayoUrl,
        authToken: authToken,
        subscriber: subscriber
    });
};
        