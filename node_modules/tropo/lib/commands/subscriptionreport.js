/*global console, exports, require*/

var cli = require('../cli'),
    prompt = require('prompt'),
    util = require('util'),
    repo = require('../repo');

var log = cli.log;
var prompt = cli.prompt;

var stringPadded = function (content, maxSpace) {
    "use strict";
    var i,
        printString;
    printString = content;
    for (i = 0; i < maxSpace - content.toString().length; i = i + 1) {
        printString = " " + printString;
    }
    return printString;
};

var printSubscriptionReport = function (subscriptionReport) {
    "use strict";

    // debugging
    // console.log(subscriptionReport.subscriptions);

    var bar = "----------------------------------",
        header = bar +
            "\n" + "Subscription Report" +
            "\n" + bar,
        dates = "Date Range " + subscriptionReport.from +
            " - " + subscriptionReport.to +
            "\n" + bar,
        arrayLength = subscriptionReport.subscriptions.length,
        subscription,
        i;

    console.log(header);
    console.log(dates);
    for (i = 0; i < arrayLength; i = i + 1) {
        subscription = "Day " + (i + 1) +
            " (" + subscriptionReport.subscriptions[i].date +
            "): " + stringPadded(subscriptionReport.subscriptions[i].subscriptionCount, 8);
        console.log(subscription);
    }
};

var get = function (arg1, arg2, callback) {
    "use strict";
    // debugging
    // console.log(arg1);
    // console.log(arg2);

    if (arg1 && arg2) {
        repo.SubscriptionReport.findPathNQueryParamTP(null, ["from", "to"], [arg1, arg2], function (err, data) {
            var dataContent;
            dataContent = JSON.parse(data);
            if (err) {
                if (dataContent) {
                    console.log("ERROR:");
                    console.log(dataContent.error);
                }
            } else {
                if (data) {
                    // debugging
                    // console.log(dataContent);
                    printSubscriptionReport(dataContent);
                }
            }
            // debugging
            /*
             var sr = {};
             sr.from = "2014-06-23";
             sr.to = "2014-06-25";
             sr.subscriptions = [
             {date: "2014-06-23", subscriptionCount: 15},
             {date: "2014-06-24", subscriptionCount: 1234},
             {date: "2014-06-25", subscriptionCount: 0}
             ];
             printSubscriptionReport(sr);
             */
            callback(err, data);
        });
        return;
    }
    var schema = {
        properties: {
            from: {
                required: true,
                pattern: /^(19|20)\d\d[\-](0[1-9]|1[012])[\-](0[1-9]|[12][0-9]|3[01])$/,
                message: 'Must be a date: YYYY-MM-DD'
            },
            to: {
                required: true,
                pattern: /^(19|20)\d\d[\-](0[1-9]|1[012])[\-](0[1-9]|[12][0-9]|3[01])$/,
                message: 'Must be a date: YYYY-MM-DD'
            }
        }
    };
    prompt.get(schema, function (err, result) {
        if (err) {
            callback(err);
            return;
        }

        var from = result.from,
            to = result.to;
        repo.SubscriptionReport.findPathNQueryParamTP(null, ["from", "to"], [from, to], function (err, data) {
            var dataContent;
            dataContent = JSON.parse(data);
            if (err) {
                if (dataContent) {
                    console.log("ERROR:");
                    console.log(dataContent.error);
                }
            } else {
                if (data) {
                    // debugging
                    // console.log(dataContent);
                    printSubscriptionReport(dataContent);
                }
            }
            callback(err, data);
        });
    });
};
exports.get = get;
