/*global console,module,process,require*/

var cli = require('../lib/cli'),
    util = require('util'),
    http = require('http'),
    fs = require('fs');

var conf = cli.config;
var log = cli.log;
var prompt = cli.prompt;

function saveCreds(user, pw, callback) {
    conf.stores.file.set('provisioningServerUsername', user);
    conf.stores.file.set('provisioningServerPassword', pw);
    conf.save(function (err) {
        // console.log(conf.stores.file.file);
        fs.chmodSync(conf.stores.file.file, '600');
        callback(err);
    });
}

module.exports.whoami = function (callback) {
    console.log("provisioning server: " + conf.stores.file.get('provisioningServerUrl'));
    console.log("username: " + conf.stores.file.get('provisioningServerUsername'));
    callback();
};

module.exports.prompt = function (opts, callback) {
    if (!callback && typeof opts === 'function') {
        callback = opts;
        opts = {};
    }

    if (opts.justCreds) {
        promptCreds(callback);
        return;
    }

    var schema = {
        properties: {
            provisioningServerUrl: {
                default: ''
            }
        }
    };

    //
    // Get two properties from the user: email, password
    //
    if (!prompt) {
        prompt = require('prompt');
    }
    prompt.get(schema, function (err, result) {

        if (err) {
            callback(err);
            return;
        }

        conf.stores.file.set('provisioningServerUrl', result.provisioningServerUrl);

        return promptCreds(callback);
    });
};

function promptCreds(callback) {
    var schema = {properties: {
        username: {
            required: true
        },
        password: {
            required: true,
            hidden: true
        }
    }};
    if (!prompt) {
        prompt = require('prompt');
    }
    prompt.get(schema, function (err, result) {
        if (err) {
            callback(err);
            return;
        }
        saveCreds(result.username, result.password, callback);
    });
}
module.exports.promptCreds = promptCreds;
