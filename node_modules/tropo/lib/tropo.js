/*global module, process*/

var Tropo = require('./tropo-impl'),
    Rayo = require('./rayo'),
    util = require('util'),
    events = require('events'),
    log = require('winston');

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// Fetching configuration parameters from process.env in context
// of PaaS; if "TROPO_IN_CLOUD_FOUNDRY" or "TROPO_IN_APCERA" is present, then
// Tropo runs in PaaS

var env = process.env,
    rayo_url, appRevisionId;

if ("TROPO_IN_CLOUD_FOUNDRY" in env || "TROPO_IN_APCERA" in process.env) {
    log.debug("Tropo runs in PaaS");

    if ("TROPO_RAYO_URL" in env) {
        rayo_url = env.TROPO_RAYO_URL;
    } else {
        log.error("Rayo URL missing");
        process.exit(-1);
    }
    
    if ("TROPO_APP_REVISION_ID" in env) {
        appRevisionId = env.TROPO_APP_REVISION_ID;
    } else {
        log.error("App Revision ID missing");
        process.exit(-1);
    }    

    // add parameters to process.argv
    process.argv.push('--transport');

    var transportType = env.TROPO_TRANSPORT || 'http';

    // the listenAddress is not really needed in context of
    // Cloud Foundry; but added here in order to keep the existing
    // code path unchanged
    process.argv.push('{"rayoUrl":\"' + rayo_url + '\",' +
        '"type":"' + transportType + '",' +
        '"listenAddress":"0.0.0.0:5555"}');

    process.argv.push('--appRevisionId');
    process.argv.push(appRevisionId);
    
    // TODO: needed in case of Cloud Foundry?
    if ("TROPO_SANDBOX_URL" in env) {
        process.argv.push('--sandboxURL');
        process.argv.push(env.TROPO_SANDBOX_URL);
    }    

    process.argv.push('run');

    // this parameter contains in the non-PaaS case the absolute path
    // to the Tropo application; in the PaaS case it is not needed
    process.argv.push('/not/needed');

    log.debug("Process env:");
    log.debug(JSON.stringify(process.env));
    log.debug("Process argv:");
    log.debug(JSON.stringify(process.argv));
} else {
    log.debug("Tropo runs in VoxeoLabs' PaaS");
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

module.exports = new Tropo();
require('pkginfo')(module, 'version');

if ("TROPO_IN_CLOUD_FOUNDRY" in env || "TROPO_IN_APCERA" in process.env) {
    // required in order to start up tropo in context of PaaS
    require('./tropod.js');
}

log.debug('Tropo Loaded');
